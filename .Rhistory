style = color_scales(temps, show_text = FALSE)
),
columns = list(
Year = colDef(
maxWidth = 50
)
)
)
# reactable(
#   data,
#   defaultSorted = "MPG.city",
#   defaultSortOrder = "desc",
#   columns = list(
#     MPG.city = colDef(
#       style = color_scales(data, show_text = FALSE)
#     ),
#     MPG.highway = colDef(
#       style = color_scales(data, show_text = FALSE)
#     )
#   )
# )
reactable(
temps,
pagination = FALSE,
defaultColDef = colDef(
maxWidth = 45,
style = color_scales(temps, show_text = FALSE)
),
columns = list(
Year = colDef(
maxWidth = 50
)
)
)
# reactable(
#   data,
#   defaultSorted = "MPG.city",
#   defaultSortOrder = "desc",
#   columns = list(
#     MPG.city = colDef(
#       style = color_scales(data, show_text = FALSE)
#     ),
#     MPG.highway = colDef(
#       style = color_scales(data, show_text = FALSE)
#     )
#   )
# )
reactable(
temps,
pagination = FALSE,
defaultColDef = colDef(
maxWidth = 50,
style = color_scales(temps, show_text = FALSE)
),
columns = list(
Year = colDef(
maxWidth = 50
)
)
)
dimnames <- list(start(nottem)[1]:end(nottem)[1], month.abb)
temps <- matrix(nottem, ncol = 12, byrow = TRUE, dimnames = dimnames)
temps <- as_tibble(temps, rownames = "Year")
reactable(
temps,
pagination = FALSE,
defaultColDef = colDef(
maxWidth = 50,
style = color_scales(temps, show_text = FALSE)
),
columns = list(
Year = colDef(
maxWidth = 50
)
)
)
temps
temps %>% pivot_wider()
library(tidyr)
temps %>% pivot_wider()
temps %>% pivot_longer()
temps %>% pivot_wider(names_from = "Year")
temps %>% pivot_wider(names_from = Year)
temps %>% pivot_wider(names_from = Year, values_from = Year)
t(temps)
tibble(t(temps))
data.frame(t(temps))
data.frame(t(temps[-1]))
temps2 <- data.frame(t(temps[-1]))
colnames(temps2) <- temps[, 1]
temps2
temps2 <- data.frame(t(temps[-1]))
temps2
temps[, 1]
colnames(temps2) <- temps[, 1]
temps2
data <- MASS::Cars93 %>%
filter(Type %in% c("Compact", "Sporty", "Van")) %>%
select(c("Make", "Type", "MPG.city", "MPG.highway")) %>%
head(10)
data
MASS::Cars93
temps
library(gampminder)
library(gapminder)
gapminder
gapminder %>% pivot_wider(names_from = year, values_from = pop)
gapminder %>% filter(country = "United States") %>%  pivot_wider(names_from = year, values_from = pop)
unique(gapminder(country))
unique(gapminder$country)
gapminder %>% filter(country == "United States") %>%  pivot_wider(names_from = year, values_from = pop)
gapminder %>% filter(country == "United States") %>% select(year, pop) %>%  pivot_wider(names_from = year, values_from = pop)
gapminder %>% filter(continent == "Americas") %>% select(year, pop) %>%  pivot_wider(names_from = year, values_from = pop)
gapminder %>% filter(continent == "Americas")
gapminder %>% filter(continent == "Americas") %>% select(country, year, pop) %>%  pivot_wider(names_from = year, values_from = pop)
population_data <- gapminder %>% filter(continent == "Americas") %>% select(country, year, pop) %>%  pivot_wider(names_from = year, values_from = pop)
dimnames <- list(start(nottem)[1]:end(nottem)[1], month.abb)
temps <- matrix(nottem, ncol = 12, byrow = TRUE, dimnames = dimnames)
temps <- as_tibble(temps, rownames = "Year")
population_data <- gapminder %>% filter(continent == "Americas") %>% select(country, year, pop) %>%  pivot_wider(names_from = year, values_from = pop)
reactable(
population_data,
pagination = FALSE,
defaultColDef = colDef(
maxWidth = 50,
style = color_scales(population_data, show_text = FALSE)
),
columns = list(
country = colDef(
maxWidth = 80
)
)
)
reactable(
population_data,
pagination = FALSE,
defaultColDef = colDef(
maxWidth = 50,
style = color_scales(population_data, show_text = FALSE, span = TRUE)
),
columns = list(
country = colDef(
maxWidth = 80
)
)
)
gapminder
dimnames <- list(start(nottem)[1]:end(nottem)[1], month.abb)
temps <- matrix(nottem, ncol = 12, byrow = TRUE, dimnames = dimnames)
temps <- as_tibble(temps, rownames = "Year")
population_data <- gapminder %>% filter(continent == "Americas") %>% select(country, year, lifeExp) %>%  pivot_wider(names_from = year, values_from = lifeExp)
reactable(
population_data,
pagination = FALSE,
defaultColDef = colDef(
maxWidth = 50,
style = color_scales(population_data, show_text = FALSE, span = TRUE)
),
columns = list(
country = colDef(
maxWidth = 80
)
)
)
dimnames <- list(start(nottem)[1]:end(nottem)[1], month.abb)
temps <- matrix(nottem, ncol = 12, byrow = TRUE, dimnames = dimnames)
temps <- as_tibble(temps, rownames = "Year")
population_data <- gapminder %>% filter(continent == "Americas") %>% select(country, year, lifeExp) %>%  pivot_wider(names_from = year, values_from = lifeExp)
reactable(
population_data,
pagination = FALSE,
defaultColDef = colDef(
maxWidth = 50,
style = color_scales(population_data, show_text = FALSE)
),
columns = list(
country = colDef(
maxWidth = 80
)
)
)
dimnames <- list(start(nottem)[1]:end(nottem)[1], month.abb)
temps <- matrix(nottem, ncol = 12, byrow = TRUE, dimnames = dimnames)
temps <- as_tibble(temps, rownames = "Year")
population_data <- gapminder %>% filter(continent == "Americas") %>% select(country, year, lifeExp) %>%  pivot_wider(names_from = year, values_from = lifeExp)
reactable(
population_data,
pagination = FALSE,
defaultColDef = colDef(
maxWidth = 50,
style = color_scales(population_data, show_text = FALSE, span = TRUE)
),
columns = list(
country = colDef(
maxWidth = 80
)
)
)
dimnames <- list(start(nottem)[1]:end(nottem)[1], month.abb)
temps <- matrix(nottem, ncol = 12, byrow = TRUE, dimnames = dimnames)
temps <- as_tibble(temps, rownames = "Year")
population_data <- gapminder %>% filter(continent == "Americas") %>% select(country, year, lifeExp) %>%  pivot_wider(names_from = year, values_from = lifeExp)
reactable(
population_data,
pagination = FALSE,
defaultColDef = colDef(
maxWidth = 50,
style = color_scales(population_data, show_text = FALSE, span = TRUE)
),
columns = list(
country = colDef(
maxWidth = 100
)
)
)
unique(gapminder$continent)
gampminder %>% group_by(continent) %>% count()
gapminder %>% group_by(continent) %>% count()
gapminder %>% group_by(continent) %>% count(country)
gapminder %>% count(continent)
gapminder %>% group_by(continent) %>% summarize(total = n_distinct(country))
gapminder
dimnames <- list(start(nottem)[1]:end(nottem)[1], month.abb)
temps <- matrix(nottem, ncol = 12, byrow = TRUE, dimnames = dimnames)
temps <- as_tibble(temps, rownames = "Year")
population_data <- gapminder %>% filter(continent == "Americas") %>% select(country, year, lifeExp) %>%  pivot_wider(names_from = year, values_from = lifeExp)
reactable(
population_data,
pagination = FALSE,
defaultColDef = colDef(
maxWidth = 45,
style = color_scales(population_data, show_text = FALSE, span = TRUE)
),
columns = list(
country = colDef(
maxWidth = 100
)
)
)
reactable(
population_data,
pagination = FALSE,
defaultSortOrder = "2007",
defaultColDef = colDef(
maxWidth = 50,
style = color_scales(population_data, show_text = FALSE, span = TRUE)
),
columns = list(
country = colDef(
maxWidth = 100
)
)
)
dimnames <- list(start(nottem)[1]:end(nottem)[1], month.abb)
temps <- matrix(nottem, ncol = 12, byrow = TRUE, dimnames = dimnames)
temps <- as_tibble(temps, rownames = "Year")
population_data <- gapminder %>% filter(continent == "Americas") %>% select(country, year, lifeExp) %>%  pivot_wider(names_from = year, values_from = lifeExp)
reactable(
population_data,
pagination = FALSE,
# defaultSortOrder = "2007",
defaultSorted = "2007",
defaultColDef = colDef(
maxWidth = 50,
style = color_scales(population_data, show_text = FALSE, span = TRUE)
),
columns = list(
country = colDef(
maxWidth = 100
)
)
)
dimnames <- list(start(nottem)[1]:end(nottem)[1], month.abb)
temps <- matrix(nottem, ncol = 12, byrow = TRUE, dimnames = dimnames)
temps <- as_tibble(temps, rownames = "Year")
population_data <- gapminder %>% filter(continent == "Americas") %>% select(country, year, lifeExp) %>%  pivot_wider(names_from = year, values_from = lifeExp)
reactable(
population_data,
pagination = FALSE,
# defaultSortOrder = "2007",
defaultSorted = "2007",
defaultColDef = colDef(
maxWidth = 50,
style = color_scales(population_data, show_text = FALSE, span = TRUE)
),
columns = list(
country = colDef(
maxWidth = 120
)
)
)
population_data
gapminder
as.Date(gapminder$year)
left(gapminder$year,2)
str_sub(gapminder$year, 1,2)
str_sub(gapminder$year, 3,4)
paste0("'",str_sub(gapminder$year, 3,4))
dimnames <- list(start(nottem)[1]:end(nottem)[1], month.abb)
temps <- matrix(nottem, ncol = 12, byrow = TRUE, dimnames = dimnames)
temps <- as_tibble(temps, rownames = "Year")
population_data <- gapminder %>%
filter(continent == "Americas") %>%
mutate(year = paste0("'", str_sub(year, 3,4))) %>%
select(country, year, lifeExp) %>%
pivot_wider(names_from = year, values_from = lifeExp)
reactable(
population_data,
pagination = FALSE,
defaultColDef = colDef(
maxWidth = 50,
style = color_scales(population_data, show_text = FALSE, span = TRUE)
),
columns = list(
country = colDef(
maxWidth = 120
)
)
)
dimnames <- list(start(nottem)[1]:end(nottem)[1], month.abb)
temps <- matrix(nottem, ncol = 12, byrow = TRUE, dimnames = dimnames)
temps <- as_tibble(temps, rownames = "Year")
population_data <- gapminder %>%
filter(continent == "Americas") %>%
mutate(year = paste0("'", str_sub(year, 3,4))) %>%
select(country, year, lifeExp) %>%
pivot_wider(names_from = year, values_from = lifeExp)
reactable(
population_data,
pagination = FALSE,
defaultColDef = colDef(
maxWidth = 40,
style = color_scales(population_data, show_text = FALSE, span = TRUE)
),
columns = list(
country = colDef(
maxWidth = 120
)
)
)
dimnames <- list(start(nottem)[1]:end(nottem)[1], month.abb)
temps <- matrix(nottem, ncol = 12, byrow = TRUE, dimnames = dimnames)
temps <- as_tibble(temps, rownames = "Year")
population_data <- gapminder %>%
filter(continent == "Americas") %>%
mutate(year = paste0("'", str_sub(year, 3,4))) %>%
select(country, year, lifeExp) %>%
pivot_wider(names_from = year, values_from = lifeExp)
reactable(
population_data,
pagination = FALSE,
defaultColDef = colDef(
maxWidth = 35,
style = color_scales(population_data, show_text = FALSE, span = TRUE)
),
columns = list(
country = colDef(
maxWidth = 120
)
)
)
reactable(
temps,
defaultColDef = colDef(
style = color_scales(temps, span = 4:6, colors = c("#1e90ff", "#ffffff", "#ff3030")),
minWidth = 50))
population_data <- gapminder %>%
filter(continent == "Americas") %>%
mutate(year = paste0("'", str_sub(year, 3, 4))) %>%
select(country, year, lifeExp) %>%
pivot_wider(names_from = year, values_from = lifeExp)
reactable(
population_data,
pagination = FALSE,
defaultColDef = colDef(
maxWidth = 40,
style = color_scales(population_data, show_text = FALSE, span = TRUE)
),
columns = list(
country = colDef(
maxWidth = 120
)
)
)
population_data <- gapminder %>%
filter(continent == "Americas") %>%
mutate(year = paste0("'", str_sub(year, 3, 4))) %>%
select(country, year, lifeExp) %>%
pivot_wider(names_from = year, values_from = lifeExp)
reactable(
population_data,
pagination = FALSE,
showSortIcon = FALSE,
defaultColDef = colDef(
maxWidth = 40,
style = color_scales(population_data, show_text = FALSE, span = TRUE)
),
columns = list(
country = colDef(
maxWidth = 120
)
)
)
population_data <- gapminder %>%
filter(continent == "Americas") %>%
mutate(year = paste0("'", str_sub(year, 3, 4))) %>%
select(country, year, lifeExp) %>%
pivot_wider(names_from = year, values_from = lifeExp)
reactable(
population_data,
pagination = FALSE,
showSortIcon = FALSE,
defaultSorted = "'52",
defaultColDef = colDef(
maxWidth = 40,
style = color_scales(population_data, show_text = FALSE, span = TRUE)
),
columns = list(
country = colDef(
maxWidth = 120
)
)
)
dimnames <- list(start(nottem)[1]:end(nottem)[1], month.abb)
temps <- matrix(nottem, ncol = 12, byrow = TRUE, dimnames = dimnames)
temps <- as_tibble(temps, rownames = "Year")
reactable(
temps,
defaultColDef = colDef(
style = color_scales(temps, span = TRUE, colors = c("#1e90ff", "#ffffff", "#ff3030")),
minWidth = 50))
gapminder
population_data
dimnames <- list(start(nottem)[1]:end(nottem)[1], month.abb)
temps <- matrix(nottem, ncol = 12, byrow = TRUE, dimnames = dimnames)
temps <- as_tibble(temps, rownames = "Year")
reactable(
temps,
defaultColDef = colDef(
style = color_scales(temps, span = TRUE, colors = c("#36a1d6", "#76b8de", "#a0bfd9", "#c1d1e3", "#ffffff", "#ffffff", "#dba670", "#d88359", "#d65440", "#c62c34")),
minWidth = 50))
dimnames <- list(start(nottem)[1]:end(nottem)[1], month.abb)
temps <- matrix(nottem, ncol = 12, byrow = TRUE, dimnames = dimnames)
temps <- as_tibble(temps, rownames = "Year")
reactable(
temps,
defaultColDef = colDef(
style = color_scales(temps, span = TRUE, colors = c("#36a1d6", "#76b8de", "#a0bfd9", "#ffffff", "#d88359", "#d65440", "#c62c34")),
minWidth = 50))
dimnames <- list(start(nottem)[1]:end(nottem)[1], month.abb)
temps <- matrix(nottem, ncol = 12, byrow = TRUE, dimnames = dimnames)
temps <- as_tibble(temps, rownames = "Year")
reactable(
temps,
defaultColDef = colDef(
style = color_scales(temps, span = TRUE, colors = c("#36a1d6", "#76b8de", "#a0bfd9", "#ffffff", "#d88359", "#d65440", "#c62c34")),
minWidth = 50))
dimnames <- list(start(nottem)[1]:end(nottem)[1], month.abb)
temps <- matrix(nottem, ncol = 12, byrow = TRUE, dimnames = dimnames)
temps <- as_tibble(temps, rownames = "Year")
temppal <- c("#36a1d6", "#76b8de", "#a0bfd9", "#ffffff", "#d88359", "#d65440", "#c62c34")
reactable(
temps,
defaultColDef = colDef(
style = color_scales(temps, span = TRUE, colors = temppal),
minWidth = 50))
dimnames <- list(start(nottem)[1]:end(nottem)[1], month.abb)
temps <- matrix(nottem, ncol = 12, byrow = TRUE, dimnames = dimnames)
temps <- as_tibble(temps, rownames = "Year")
temppal <- c("#36a1d6", "#76b8de", "#a0bfd9", "#ffffff", "#d88359", "#d65440", "#c62c34")
reactable(
temps,
defaultColDef = colDef(
style = color_scales(temps, span = TRUE, colors = temppal),
minWidth = 50
)
)
reactable(
temps,
defaultColDef = colDef(
style = color_scales(temps, span = 4:6, colors = temppal),
minWidth = 50))
reactable(
temps,
defaultColDef = colDef(
style = color_scales(temps, span = 3:6, colors = temppal),
minWidth = 50))
color_scales()
color_scales
population_data <- gapminder %>%
filter(continent == "Americas") %>%
mutate(year = paste0("'", str_sub(year, 3, 4))) %>%
select(country, year, lifeExp) %>%
pivot_wider(names_from = year, values_from = lifeExp)
reactable(
population_data,
pagination = FALSE,
showSortIcon = FALSE,
defaultSorted = "'52",
defaultColDef = colDef(
maxWidth = 40,
style = color_scales(population_data, show_text = FALSE, span = TRUE)
),
columns = list(
country = colDef(
maxWidth = 120
)
)
)
library(pkgdown)
pkgdown::build_article("color_scales")
pkgdown::build_article("color_scales.Rmd")
