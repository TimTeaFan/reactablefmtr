% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/table_elements.R
\name{add_legend}
\alias{add_legend}
\title{Add a legend to a reactable table}
\usage{
add_legend(
  table = NULL,
  colors = NULL,
  bias = 1,
  show_labels = TRUE,
  labels = NULL,
  position = "below",
  align = "right",
  margin = NULL
)
}
\arguments{
\item{table}{A reactable table.}

\item{colors}{The color palette to be displayed in the legend.
By default, the colors are shown to match the default colors used in
`color_tiles()`, `color_scales()`, and `data_bars()`.}

\item{bias}{A positive value that determines the spacing between multiple colors.
A higher value spaces out the colors at the higher end more than a lower number.
Default is 1.}

\item{show_labels}{Logical. Show or hide the labels next to the legend.
Default is TRUE.}

\item{labels}{Assign a label to the lower and upper bounds of the legend.
Must provide two values for the labels.
Default is NULL.}

\item{position}{The position of the legend in relation to the table.
Options are 'above' or 'below'.
Default is 'below'.}

\item{align}{The horizontal alignment of the legend.
Options are 'left', 'right', or 'center'.
Default is 'right'.}

\item{margin}{Use margin() to set the margin around the legend (top, right, bottom, left).
Default is NULL.}
}
\value{
a function that adds a source below a reactable table.
}
\description{
Use `add_legend()` to place a legend either below or above a {reactable} or {reactablefmtr} table.
     The legend can be used to display the color scale of a color palette used within the table.
     The legend can be aligned to either the right, left, or center of the table.
     Custom labels can be applied to the upper and lower bounds of the legend.
}
\examples{
\dontrun{
## Create the reactable table and then pipe in the legend
library(dplyr)
data <- iris[10:29, ]
table <- reactable(data,
columns = list(Petal.Length = colDef(
cell = color_tiles(data))))

table \%>\%
  add_legend()

## The legend can be placed below or above the table
## and aligned either to the left, right, or center
table \%>\%
  add_legend(position = "above", align = "left")

## Display custom color palettes:
table <- reactable(data,
columns = list(Petal.Length = colDef(
cell = color_tiles(data, colors = c("red","white","darkgreen")))))

table \%>\%
  add_legend(colors = c("red","white","darkgreen"))

## Add custom labels to the upper and lower bounds of the legend
table \%>\%
  add_legend(labels = c("Shorter Length","Longer Length"), colors = c("red","white","darkgreen"))
}
}
